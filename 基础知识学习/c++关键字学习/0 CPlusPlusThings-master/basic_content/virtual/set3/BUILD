# please run `bazel run //basic_content/virtual/set3:copy_consrtuct`
# please run `bazel run //basic_content/virtual/set3:full_virde`
# please run `bazel run //basic_content/virtual/set3:inline_virtual`
# please run `bazel run //basic_content/virtual/set3:vir_con`
# please run `bazel run //basic_content/virtual/set3:vir_de`
# please run `bazel run //basic_content/virtual/set3:virtual_function`
# please run `bazel run //basic_content/virtual/set3:virtual_function1`
# please run `bazel run //basic_content/virtual/set3:virtual_inline`
load("@rules_cc//cc:defs.bzl", "cc_binary")

cc_binary(
    name = "copy_consrtuct",
    srcs = ["copy_consrtuct.cpp"],
    copts = ["-std=c++11"]
)

cc_binary(
    name = "full_virde",
    srcs = ["full_virde.cpp"],
    copts = ["-std=c++11"]
)

cc_binary(
    name = "inline_virtual",
    srcs = ["inline_virtual.cpp"],
    copts = ["-std=c++11"]
)

cc_binary(
    name = "vir_con",
    srcs = ["vir_con.cpp"],
    copts = ["-std=c++11"]
)

cc_binary(
    name = "vir_de",
    srcs = ["vir_de.cpp"],
    copts = ["-std=c++11"]
)

cc_binary(
    name = "virtual_function",
    srcs = ["virtual_function.cpp"],
    copts = ["-std=c++11"]
)

cc_binary(
    name = "virtual_function1",
    srcs = ["virtual_function1.cpp"],
    copts = ["-std=c++11"]
)

cc_binary(
    name = "virtual_inline",
    srcs = ["virtual_inline.cpp"],
    copts = ["-std=c++11"]
)